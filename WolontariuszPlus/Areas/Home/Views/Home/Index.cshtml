@model WolontariuszPlus.Areas.OrganizerPanelArea.Models.EventsViewModel
@using Microsoft.AspNetCore.Identity
@using WolontariuszPlus.Models

@inject SignInManager<IdentityUser> signInManager
@inject UserManager<IdentityUser> userManager

@{
    ViewData["Title"] = "Home Page";
}


@*<h2>Najnowsze wydarzenia</h2>


    @foreach (var item in Model.EventViewModels)
    {
        <div class="card text-center">
            <div class="card-header">
                @Html.DisplayFor(modelItem => item.Name)
            </div>
            <div class="card-body">
                <img src="~/@WolontariuszPlus.Properties.Resources.UploadsFolderName/@item.ImageRelativePath" />
                <h5 class="card-title">@Html.DisplayFor(modelItem => item.ShortenedDescription)</h5>
                <p class="card-text">@Html.DisplayNameFor(model => model.DefaultEvent.OrganizerName): @Html.DisplayFor(modelItem => item.OrganizerName)</p>

                @{
                    var currentUser = await userManager.GetUserAsync(User);

                    var isVolunteer = currentUser != null && await userManager.IsInRoleAsync(currentUser, Roles.VolunteerRole);
                }
                @if (signInManager.IsSignedIn(User) && isVolunteer)
                {
                    @if (item.IsOnEvent)
                    {
                        <div href="" class="btn btn-primary" style="background-color: gray;">Już jesteś zapisany</div>
                    }
                    else
                    {
                        <a href="@Url.Action("AddVolunteerToEvent", new { eventId = item.EventId })" class="btn btn-primary">Zapisz się!</a>
                    }
                }
            </div>
            <div class="card-footer text-muted" style="background-color:rgba(0,0,0,.03)">
                @Html.DisplayNameFor(model => model.DefaultEvent.RequiredPoints): @Html.DisplayFor(modelItem => item.RequiredPoints)
            </div>
        </div>
        <br>
    }*@
<div class="jumbotron m-jumbo text-center">
    <h1 class="display-3 text-center">Platforma Wolontariusz+</h1>
    <p class="lead">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Voluptatem asperiores, neque, suscipit nemo necessitatibus vitae rem ducimus. Voluptatem asperiores, neque, suscipit nemo necessitatibus vitae rem ducimus.</p>
</div>
<br />
<h2>Nadchodzące wydarzenia</h2>

<div class="container">
    <div class="card-deck-wrapper">
        <div class="card-deck text-center">

            <!--Kamila mock
            <div class="card m-4" style="min-width:20rem">
                <img class="card-img-top" src="images/event_africa.jpg" alt="Card image cap">
                <div class="card-body flex-body">
                    <h5 class="card-title">Pomóż dzieciom!</h5>
                    <p class="card-text">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolorem praesentium possimus itaque, magni aspernatur quibusdam perspiciatis, odio hic natus! Necessitatibus.</p>
                    <div class="row button-bottom">
                        <div class="col">
                            <a href="#" class="btn button btn-outline-primary">Szczegóły</a>
                            <a href="#" class="btn button btn-primary">Zapisz się</a>
                        </div>
                    </div>
                </div>
                <div class="card-footer text-muted">Wymagane punkty: 100</div>
            </div>
            Kamila mock-->


            @foreach (var item in Model.EventViewModels)
            {
                <div class="card m-4" style="min-width:20rem">
                    <img class="card-img-top" src="~/@WolontariuszPlus.Properties.Resources.UploadsFolderName/@item.ImageRelativePath" alt="Card image cap">
                    <div class="card-body flex-body">
                        <h5 class="card-title">@Html.DisplayFor(modelItem => item.Name)</h5>
                        <p class="card-text">@Html.DisplayFor(modelItem => item.ShortenedDescription)</p>
                        <!--<p class="card-text">@Html.DisplayNameFor(model => model.DefaultEvent.OrganizerName): @Html.DisplayFor(modelItem => item.OrganizerName)</p>-->
                        @{
                            var currentUser = await userManager.GetUserAsync(User);
                            var isVolunteer = currentUser != null && await userManager.IsInRoleAsync(currentUser, Roles.VolunteerRole);
                        }
                        @if (signInManager.IsSignedIn(User) && isVolunteer)
                        {
                            @if (item.IsOnEvent)
                            {

                                <div class="row button-bottom">
                                    <div class="col">
                                        <a href="#" class="btn button btn-outline-primary">Szczegóły</a>
                                        <div href="" class="btn disabled" style="background-color: gray;">Jesteś zapisany!</div>
                                    </div>
                                </div>
                            }
                            else
                            {
                                <div class="row button-bottom">
                                    <div class="col">
                                        <a href="#" class="btn button btn-outline-primary">Szczegóły</a>
                                        <a href="@Url.Action("AddVolunteerToEvent", new { eventId = item.EventId })" class="btn btn-primary">Zapisz się!</a>
                                    </div>
                                </div>
                                <!--<a href="@Url.Action("AddVolunteerToEvent", new { eventId = item.EventId })" class="btn btn-primary">Zapisz się!</a>-->
                                    }
                                }
                                <!--<div class="row button-bottom">
                <div class="col">
                    <a href="#" class="btn button btn-outline-primary">Szczegóły</a>
                </div>
            </div>-->
                            </div>
                    <div class="card-footer text-muted" style="background-color:rgba(0,0,0,.03)">
                        @Html.DisplayNameFor(model => model.DefaultEvent.RequiredPoints): @Html.DisplayFor(modelItem => item.RequiredPoints)
                    </div>
                </div>
                <br>
            }
        </div>
    </div>
</div>